orbs:
  gcp-cli: circleci/gcp-cli@1.1.0

version: 2.1

jobs:
  build:
    working_directory: ~/trade-matching
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout
      - restore_cache:
          key: trade-matching-{{ checksum "build.gradle.kts" }}
      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: trade-matching-{{ checksum "build.gradle.kts" }}

      - run: gradle test bootJar
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/libs/trade-matching-1.0-SNAPSHOT.jar
      - persist_to_workspace: # for deployment
          root: .
          paths:
            - Dockerfile
            - build/libs/trade-matching-1.0-SNAPSHOT.jar
            - .helm
  deploy:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/trade-matching
    steps:
      - attach_workspace: # "mount" the persisted files to here
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build docker image
          command: docker build --tag=trade-matching .
      - run:
          name: Install Helm
          command: export DESIRED_VERSION=v2.13.0 && curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
      - run:
          name: Set reusable env-vars
          command: |
            echo 'export GCLOUD_IMAGE_NAME="$GCLOUD_REGISTRY_HOST/$GOOGLE_PROJECT_ID/trade-matching"' >> $BASH_ENV
            echo 'export IMAGE_TAG="0.1.$CIRCLE_BUILD_NUM"' >> $BASH_ENV
      - gcp-cli/initialize
      - run:
          name: Push docker image to Google Cloud Container Registry
          command: |
            gcloud auth configure-docker
            docker tag trade-matching $GCLOUD_IMAGE_NAME:latest
            docker tag $GCLOUD_IMAGE_NAME $GCLOUD_IMAGE_NAME:$IMAGE_TAG
            docker push $GCLOUD_IMAGE_NAME
      - run:
          name: Configure kubectl in order to access the cluster
          command: gcloud container clusters get-credentials your-first-cluster-1 --zone $GOOGLE_COMPUTE_ZONE --project $GOOGLE_PROJECT_ID
      - run:
          name: Rollout new image or create deployment & service
          command: |
            if helm status dev-tm -o yaml; then
                echo "===== Rollout new version of image ====="
                helm upgrade dev-tm .helm --reuse-values --set image.tag=$IMAGE_TAG --wait
            else
                echo "===== Brand new deployment ====="
                helm install .helm --name dev-tm --set image.tag=$IMAGE_TAG,gcloud.registryHost=$GCLOUD_REGISTRY_HOST,gcloud.projectId=$GOOGLE_PROJECT_ID --wait
            fi


workflows:
  version: 2.1
  workflow:
    jobs:
      - build:
          context: gcp-my_first_project
      - deploy:
          context: gcp-my_first_project
          requires:
            - build
          filters:
            branches:
              only: master